@model Ejercicio24MVC.Models.Documento

@{
    ViewBag.Title = "Edit";
    Layout = ("~/Views/Shared/_FrontPage.cshtml");
}
<style>
   
    .form-horizontal {
        justify-content: center;
        text-align: center;
    }

    .form-group {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .control-label {
        width: 70%;
        text-align: center;
        font-size: 20px;
    }

    .form-control {
        margin-top: 0;
        text-align: center;
        font-size: 15px;
    }

    input[type="submit"] {
        width: 40%;
        font-size: 20px;
    }

    h2 {
        text-align: center;
    }
    h3 {
        font-size: 20px;
    }
    input[type="submit"] {
        width: 90%;
        font-size: 20px;
        text-align: center;
        justify-content: center;
        background-color: #add8e6; /* Este es un color celeste común */
        color: #000000; /* Color del texto en negro para contraste */
    }
</style>
<h2>Editar Documento</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Version, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Version, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Version, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProyectoId, "ProyectoId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProyectoId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProyectoId, "", new { @class = "text-danger" })
            </div>
        </div>
        <input type="submit" value="Guardar" class="btn btn-default" />
    </div>
}

<h3>
    @Html.ActionLink("Regresar a la lista", "Index")
</h3>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
